diff --git a/node_modules/deprecated-react-native-listview/InternalListViewType.js b/node_modules/deprecated-react-native-listview/InternalListViewType.js
index d3c2e64..d5062bc 100644
--- a/node_modules/deprecated-react-native-listview/InternalListViewType.js
+++ b/node_modules/deprecated-react-native-listview/InternalListViewType.js
@@ -21,7 +21,7 @@ class InternalListViewType<Props> extends React.Component<Props> {
   flashScrollIndicators() {}
   getScrollResponder(): any {}
   getScrollableNode(): any {}
-  getMetrics(): Object {}
+  getMetrics(): any {}
   scrollTo(...args: Array<mixed>) {}
   scrollToEnd(options?: ?{animated?: ?boolean}) {}
 }
diff --git a/node_modules/deprecated-react-native-listview/ListViewDataSource.js b/node_modules/deprecated-react-native-listview/ListViewDataSource.js
index 7cf065a..64e1ccf 100644
--- a/node_modules/deprecated-react-native-listview/ListViewDataSource.js
+++ b/node_modules/deprecated-react-native-listview/ListViewDataSource.js
@@ -10,7 +10,7 @@
 'use strict';
 
 const invariant = require('invariant');
-const isEmpty = require('react-native/Libraries/vendor/core/isEmpty');
+const isEmpty = require('./isEmpty');
 /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error
  * found when Flow v0.54 was deployed. To see the error delete this comment and
  * run Flow. */
diff --git a/node_modules/deprecated-react-native-listview/index.js b/node_modules/deprecated-react-native-listview/index.js
index 4654972..1cd5c13 100644
--- a/node_modules/deprecated-react-native-listview/index.js
+++ b/node_modules/deprecated-react-native-listview/index.js
@@ -21,8 +21,8 @@ const StaticRenderer = require('./StaticRenderer');
 const View = ReactNative.View;
 const cloneReferencedElement = require('react-clone-referenced-element');
 const createReactClass = require('create-react-class');
-const isEmpty = require('react-native/Libraries/vendor/core/isEmpty');
-const merge = require('react-native/Libraries/vendor/core/merge');
+const isEmpty = require('./isEmpty');
+const merge = require('./merge');
 
 import type {Props as ScrollViewProps} from 'react-native/Libraries/Components/ScrollView/ScrollView';
 
diff --git a/node_modules/deprecated-react-native-listview/isEmpty.js b/node_modules/deprecated-react-native-listview/isEmpty.js
new file mode 100644
index 0000000..78f8841
--- /dev/null
+++ b/node_modules/deprecated-react-native-listview/isEmpty.js
@@ -0,0 +1,29 @@
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @flow strict
+ * @format
+ */
+
+'use strict';
+
+/**
+ * Mimics empty from PHP.
+ */
+function isEmpty(obj: mixed): boolean {
+  if (Array.isArray(obj)) {
+    return obj.length === 0;
+  } else if (typeof obj === 'object') {
+    for (const i in obj) {
+      return false;
+    }
+    return true;
+  } else {
+    return !obj;
+  }
+}
+
+module.exports = isEmpty;
diff --git a/node_modules/deprecated-react-native-listview/merge.js b/node_modules/deprecated-react-native-listview/merge.js
new file mode 100644
index 0000000..a294d4a
--- /dev/null
+++ b/node_modules/deprecated-react-native-listview/merge.js
@@ -0,0 +1,26 @@
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+"use strict";
+
+const mergeInto = require('./mergeInto');
+
+/**
+ * Shallow merges two structures into a return value, without mutating either.
+ *
+ * @param {?object} one Optional object with properties to merge from.
+ * @param {?object} two Optional object with properties to merge from.
+ * @return {object} The shallow extension of one by two.
+ */
+const merge = function(one, two) {
+  const result = {};
+  mergeInto(result, one);
+  mergeInto(result, two);
+  return result;
+};
+
+module.exports = merge;
diff --git a/node_modules/deprecated-react-native-listview/mergeHelpers.js b/node_modules/deprecated-react-native-listview/mergeHelpers.js
new file mode 100644
index 0000000..92229e1
--- /dev/null
+++ b/node_modules/deprecated-react-native-listview/mergeHelpers.js
@@ -0,0 +1,137 @@
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ *
+ * requiresPolyfills: Array.isArray
+ *
+ * @format
+ */
+
+'use strict';
+
+const invariant = require('invariant');
+
+/**
+ * Maximum number of levels to traverse. Will catch circular structures.
+ * @const
+ */
+const MAX_MERGE_DEPTH = 36;
+
+/**
+ * We won't worry about edge cases like new String('x') or new Boolean(true).
+ * Functions and Dates are considered terminals, and arrays are not.
+ * @param {*} o The item/object/value to test.
+ * @return {boolean} true iff the argument is a terminal.
+ */
+const isTerminal = function(o) {
+  return typeof o !== 'object' || o instanceof Date || o === null;
+};
+
+const mergeHelpers = {
+  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,
+
+  isTerminal: isTerminal,
+
+  /**
+   * Converts null/undefined values into empty object.
+   *
+   * @param {?Object=} arg Argument to be normalized (nullable optional)
+   * @return {!Object}
+   */
+  normalizeMergeArg: function(arg) {
+    return arg === undefined || arg === null ? {} : arg;
+  },
+
+  /**
+   * If merging Arrays, a merge strategy *must* be supplied. If not, it is
+   * likely the caller's fault. If this function is ever called with anything
+   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.
+   *
+   * @param {*} one Array to merge into.
+   * @param {*} two Array to merge from.
+   */
+  checkMergeArrayArgs: function(one, two) {
+    invariant(
+      Array.isArray(one) && Array.isArray(two),
+      'Tried to merge arrays, instead got %s and %s.',
+      one,
+      two,
+    );
+  },
+
+  /**
+   * @param {*} one Object to merge into.
+   * @param {*} two Object to merge from.
+   */
+  checkMergeObjectArgs: function(one, two) {
+    mergeHelpers.checkMergeObjectArg(one);
+    mergeHelpers.checkMergeObjectArg(two);
+  },
+
+  /**
+   * @param {*} arg
+   */
+  checkMergeObjectArg: function(arg) {
+    invariant(
+      !isTerminal(arg) && !Array.isArray(arg),
+      'Tried to merge an object, instead got %s.',
+      arg,
+    );
+  },
+
+  /**
+   * @param {*} arg
+   */
+  checkMergeIntoObjectArg: function(arg) {
+    invariant(
+      (!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
+      'Tried to merge into an object, instead got %s.',
+      arg,
+    );
+  },
+
+  /**
+   * Checks that a merge was not given a circular object or an object that had
+   * too great of depth.
+   *
+   * @param {number} Level of recursion to validate against maximum.
+   */
+  checkMergeLevel: function(level) {
+    invariant(
+      level < MAX_MERGE_DEPTH,
+      'Maximum deep merge depth exceeded. You may be attempting to merge ' +
+        'circular structures in an unsupported way.',
+    );
+  },
+
+  /**
+   * Checks that the supplied merge strategy is valid.
+   *
+   * @param {string} Array merge strategy.
+   */
+  checkArrayStrategy: function(strategy) {
+    invariant(
+      strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
+      'You must provide an array strategy to deep merge functions to ' +
+        'instruct the deep merge how to resolve merging two arrays.',
+    );
+  },
+
+  /**
+   * Set of possible behaviors of merge algorithms when encountering two Arrays
+   * that must be merged together.
+   * - `clobber`: The left `Array` is ignored.
+   * - `indexByIndex`: The result is achieved by recursively deep merging at
+   *   each index. (not yet supported.)
+   */
+  ArrayStrategies: {
+    Clobber: 'Clobber',
+    Concat: 'Concat',
+    IndexByIndex: 'IndexByIndex',
+  },
+};
+
+module.exports = mergeHelpers;
diff --git a/node_modules/deprecated-react-native-listview/mergeInto.js b/node_modules/deprecated-react-native-listview/mergeInto.js
new file mode 100644
index 0000000..877c827
--- /dev/null
+++ b/node_modules/deprecated-react-native-listview/mergeInto.js
@@ -0,0 +1,34 @@
+/**
+ * Copyright (c) Facebook, Inc. and its affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+"use strict";
+
+var mergeHelpers = require('./mergeHelpers');
+
+var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;
+var checkMergeIntoObjectArg = mergeHelpers.checkMergeIntoObjectArg;
+
+/**
+ * Shallow merges two structures by mutating the first parameter.
+ *
+ * @param {object|function} one Object to be merged into.
+ * @param {?object} two Optional object with properties to merge from.
+ */
+function mergeInto(one, two) {
+  checkMergeIntoObjectArg(one);
+  if (two != null) {
+    checkMergeObjectArg(two);
+    for (var key in two) {
+      if (!Object.prototype.hasOwnProperty.call(two, key)) {
+        continue;
+      }
+      one[key] = two[key];
+    }
+  }
+}
+
+module.exports = mergeInto;
